"0","# Fit linear regression models to predict gpu_avg using bond, spy, nvda, difficulty, and btc for each dataset"
"0","glm_overall <- glm(gpu_avg ~ bond + spy + nvda + difficulty + btc, data = GPU_input_data_overall)"
"0","glm_pre <- glm(gpu_avg ~ bond + spy + nvda + difficulty + btc, data = GPU_input_data_pre)"
"0","glm_post <- glm(gpu_avg ~ bond + spy + nvda + difficulty + btc, data = GPU_input_data_post)"
"0",""
"0","# Use each model to predict gpu_avg for all three datasets"
"0","predicted_overall_overall <- predict(glm_overall, newdata = GPU_input_data_overall)"
"0","predicted_overall_pre <- predict(glm_overall, newdata = GPU_input_data_pre)"
"0","predicted_overall_post <- predict(glm_overall, newdata = GPU_input_data_post)"
"0",""
"0","predicted_pre_overall <- predict(glm_pre, newdata = GPU_input_data_overall)"
"0","predicted_pre_pre <- predict(glm_pre, newdata = GPU_input_data_pre)"
"0","predicted_pre_post <- predict(glm_pre, newdata = GPU_input_data_post)"
"0",""
"0","predicted_post_overall <- predict(glm_post, newdata = GPU_input_data_overall)"
"0","predicted_post_pre <- predict(glm_post, newdata = GPU_input_data_pre)"
"0","predicted_post_post <- predict(glm_post, newdata = GPU_input_data_post)"
"0",""
"0","# Create data frames to store the results"
"0","results_overall_overall <- data.frame(actual = GPU_input_data_overall$gpu_avg, predicted = predicted_overall_overall, dataset = ""overall"", model = ""overall"")"
"0","results_overall_pre <- data.frame(actual = GPU_input_data_pre$gpu_avg, predicted = predicted_overall_pre, dataset = ""pre"", model = ""overall"")"
"0","results_overall_post <- data.frame(actual = GPU_input_data_post$gpu_avg, predicted = predicted_overall_post, dataset = ""post"", model = ""overall"")"
"0",""
"0","results_pre_overall <- data.frame(actual = GPU_input_data_overall$gpu_avg, predicted = predicted_pre_overall, dataset = ""overall"", model = ""pre"")"
"0","results_pre_pre <- data.frame(actual = GPU_input_data_pre$gpu_avg, predicted = predicted_pre_pre, dataset = ""pre"", model = ""pre"")"
"0","results_pre_post <- data.frame(actual = GPU_input_data_post$gpu_avg, predicted = predicted_pre_post, dataset = ""post"", model = ""pre"")"
"0",""
"0","results_post_overall <- data.frame(actual = GPU_input_data_overall$gpu_avg, predicted = predicted_post_overall, dataset = ""overall"", model = ""post"")"
"0","results_post_pre <- data.frame(actual = GPU_input_data_pre$gpu_avg, predicted = predicted_post_pre, dataset = ""pre"", model = ""post"")"
"0","results_post_post <- data.frame(actual = GPU_input_data_post$gpu_avg, predicted = predicted_post_post, dataset = ""post"", model = ""post"")"
"0",""
"0","# Combine the results into a single data frame"
"0","results_df <- rbind(results_overall_overall, results_overall_pre, results_overall_post,"
"0","                    results_pre_overall, results_pre_pre, results_pre_post,"
"0","                    results_post_overall, results_post_pre, results_post_post)"
"0",""
"0","# Plot the actual vs. predicted values for each model-dataset combination"
"0","ggplot(results_df, aes(x = actual, y = predicted, color = dataset)) +"
"0","  geom_point() +"
"0","  geom_abline(intercept = 0, slope = 1, linetype = ""dashed"") +"
"0","  facet_grid(rows = vars(model), cols = vars(dataset), switch = ""both"") +"
"0","  labs(x = ""Actual GPU Average Price"", y = ""Predicted GPU Average Price"", color = ""Dataset"") +"
"0","  ggtitle(""Comparison of Linear Regression Models Trained on Different Time Periods"") +"
"0","  theme(plot.title = element_text(hjust = 0.5))"
